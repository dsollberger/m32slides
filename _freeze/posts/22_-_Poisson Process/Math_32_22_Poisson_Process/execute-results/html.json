{
  "hash": "72eb4827ef060eb37bc7781a339a38ff",
  "result": {
    "markdown": "---\ntitle: \"22: Poisson Process\"\nauthor: \"Derek Sollberger\"\ndate: \"2023-03-17\"\n# format: \n#   revealjs:\n#     scrollable: true\nformat: html\n# server: shiny\n---\n\n\n\\newcommand{\\ds}{\\displaystyle}\n\n\n::: {.cell}\n\n:::\n\n\n\n## Motivation for the Poisson Process\n\n- Assume a constant \\textit{rate parameter} $\\lambda$ of arrivals\n- Let $N_{t}$ be the number of arrivals in time interval $[0,t]$\n- Homogeneity:  $\\text{E}[N_{t}] = \\lambda t$ (``rate times time'')\n- Independence: numbers of arrivals in disjoint time intervals are independent random variables\n\n**Goal**: Derive distribution of number of arrivals\n\n- We expect $\\text{E}[N_{t}] = \\lambda t$ (``rate times time'')\n- Partition time interval $[0,t]$ into $n$ subintervals\n- Assuming $n$ is large enough so that each subinterval has zero or one arrival (i.e. Bernoulli trial)\n- Probability of arrival in a random subinterval: $p = \\ds\\frac{\\lambda t}{n}$\n\nSo far, we are assuming $N_{t} \\sim \\text{Bin}(n,p)$\n\n$$P(N_{t} = k) = \\binom{n}{k} \\left(\\ds\\frac{\\lambda t}{n}\\right)^{k} \\left(1 - \\ds\\frac{\\lambda t}{n}\\right)^{n-k}$$\n\n\n## Infinitessimal\n\nHowever,\n\n- $n$ was arbitrary\n- time is a continuous variable\n\nSo let's take the limit as $n$ goes to infinity.\n\n$$\\ds\\lim_{n \\to \\infty} P(N_{t} = k) = \\ds\\lim_{n \\to \\infty} {\\color{purple}\\binom{n}{k} \\left(\\ds\\frac{\\lambda t}{n}\\right)^{k}} {\\color{blue}\\left(1 - \\ds\\frac{\\lambda t}{n}\\right)^{n}} {\\color{red}\\left(1 - \\ds\\frac{\\lambda t}{n}\\right)^{-k}}$$\n\n:::{.callout-tip collapse=\"true\"}\n## Infinitessimal\n\nHandling the limit by its factors:\n$$\\ds\\lim_{n \\to \\infty} {\\color{red}\\left(1 - \\ds\\frac{\\lambda t}{n}\\right)^{-k}} = 1, \\quad \\ds\\lim_{n \\to \\infty} {\\color{blue}\\left(1 - \\ds\\frac{\\lambda t}{n}\\right)^{n}} = e^{-\\lambda t}$$\n\n$$\\begin{array}{rcl}\n  \\ds\\lim_{n \\to \\infty} {\\color{purple}\\binom{n}{k} \\left(\\ds\\frac{\\lambda t}{n}\\right)^{k}} & = & (\\lambda t)^{k} \\ds\\lim_{n \\to \\infty} \\binom{n}{k} \\left(\\ds\\frac{1}{n}\\right)^{k} \\\\\n  ~ & = & (\\lambda t)^{k} \\ds\\lim_{n \\to \\infty} \\ds\\frac{n!}{k!(n-k)!} \\cdot \\ds\\frac{1}{n^{k}} \\\\\n  ~ & = & \\ds\\frac{(\\lambda t)^{k}}{k!} \\ds\\lim_{n \\to \\infty} \\ds\\frac{n!}{(n-k)!} \\cdot \\ds\\frac{1}{n^{k}} \\\\\n  ~ & = & \\ds\\frac{(\\lambda t)^{k}}{k!} \\ds\\lim_{n \\to \\infty} \\ds\\prod_{i = 0}^{k-1} \\ds\\frac{n - i}{n} \\\\\n  ~ & = & \\ds\\frac{(\\lambda t)^{k}}{k!}  \\ds\\prod_{i = 0}^{k-1} \\ds\\lim_{n \\to \\infty} \\ds\\frac{n - i}{n} \\\\\n  ~ & = & \\ds\\frac{(\\lambda t)^{k}}{k!}  \\\\\n\\end{array}$$\n:::\n\n\n## Probability Density Function\n\n:::{.callout-note}\n## Probability Density Function\n\nThus, if $X$ is the number of observed events in this model, let $\\mu = \\lambda t$ (was assumed to be constant), and\n$$P(X = k) = \\ds\\frac{\\mu^{k}e^{-\\mu}}{k!}$$\n\nThis is called the probability mass function for the **Poisson distribution**.  The Poisson distribution is a discrete distribution that tends to be used to model rare events.\n:::\n\n## Expected Value\n\nHere we will derive the expected value for a $\\text{Pois}(\\mu)$ distribution.\n\n:::{.callout-tip collapse=\"true\"}\n## Expected Value\n\n\\begin{array}{rcl}\n  \\text{E}[X] & = & \\ds\\sum_{k = 0}^{\\infty} k \\cdot P(x = k) \\\\\n  ~ & = & \\ds\\sum_{k = 0}^{\\infty} k \\cdot \\ds\\frac{\\mu^{k}e^{-\\mu}}{k!} \\\\\n  ~ & = & 0 + \\ds\\sum_{k = 1}^{\\infty} k \\cdot \\ds\\frac{\\mu^{k}e^{-\\mu}}{k!} \\\\\n  ~ & = & \\ds\\sum_{k = 1}^{\\infty} \\ds\\frac{\\mu^{k}e^{-\\mu}}{(k-1)!} \\\\\n  ~ & = & \\ds\\sum_{k = 1}^{\\infty} \\ds\\frac{\\mu\\mu^{k-1}e^{-\\mu}}{(k-1)!} \\\\\n  ~ & = & \\mu e^{-\\mu}\\ds\\sum_{k = 1}^{\\infty} \\ds\\frac{\\mu^{k-1}}{(k-1)!} \\\\\n  ~ & = & \\mu e^{-\\mu}\\ds\\sum_{k = 0}^{\\infty} \\ds\\frac{\\mu^{k}}{k!} \\\\\n  ~ & = & \\mu e^{-\\mu}e^{\\mu} \\\\\n\\end{array}\n\nRecall: By Taylor series, $e^{x} = \\ds\\sum_{n = 0}^{\\infty} \\ds\\frac{x^{n}}{n!}$\n\nTherefore $\\text{E}[X] = \\mu$ for a $\\text{Pois}(\\mu)$ distribution.  Furthermore, $\\text{Var}(X) = \\mu$ too for a $\\text{Pois}(\\mu)$ distribution.\n:::\n\n## Examples\n\n::::: {.panel-tabset}\n\n## Example 1\n\n**Campus Safety: Stalking**  The following data on reported incidents on stalking comes from the University of California Merced report *Safety Matters*.  Assume a Poisson distribution.\n\n![](figPois1.png)\n\n- Find the mean of the data.\n- Compute the probability that exactly 2 stalking incidents will be reported this year.\n\n:::{.callout-tip collapse=\"true\"}\n## Probability Density Function\n\n![](figPois1b.png)\n:::\n\n- Compute the probability that at least one stalking incident will be reported this year.\n\n:::{.callout-tip collapse=\"true\"}\n## Probability Density Function\n\n![](figPois1c.png)\n:::\n\n## Example 2\n\n**Campus Safety: Drug Law Violations**  The following data on arrests for drug law violations comes from the University of California Merced report *Safety Matters*.  Assume a Poisson distribution.\n\n![](figPois2.png)\n\n- Find the mean of the data.\n- Compute the probability that exactly 3 arrests will be made this year.\n\n:::{.callout-tip collapse=\"true\"}\n## Probability Density Function\n\n![](figPois2b.png)\n:::\n\n- Compute the probability that at most one arrest will be made this year.\n\n:::{.callout-tip collapse=\"true\"}\n## Probability Density Function\n\n![](figPois2c.png)\n:::\n\n:::::\n\n## Looking Ahead\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n- due Fri., Mar. 17:\n  - WHW8\n  - LHW7\n\n- no lecture on Mar. 24, Apr. 3\n  \n- Exam 2 will be on Mon., Apr. 10\n\n\n:::\n\n::: {.column width=\"50%\"}\n![](Dory.gif)\n:::\n\n::::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\t\n:::\n\n::: {.column width=\"50%\"}\n\n:::\n\n::::\n\n::::: {.panel-tabset}\n\n\n\n:::::\n",
    "supporting": [
      "Math_32_22_Poisson_Process_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}